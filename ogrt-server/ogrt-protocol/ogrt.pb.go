// Code generated by protoc-gen-go.
// source: ogrt-protocol/ogrt.proto
// DO NOT EDIT!

/*
Package OGRT is a generated protocol buffer package.

It is generated from these files:
	ogrt-protocol/ogrt.proto

It has these top-level messages:
	Fork
	Execve
*/
package OGRT

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type MessageType int32

const (
	MessageType_ForkMsg   MessageType = 100
	MessageType_ExecveMsg MessageType = 101
)

var MessageType_name = map[int32]string{
	100: "ForkMsg",
	101: "ExecveMsg",
}
var MessageType_value = map[string]int32{
	"ForkMsg":   100,
	"ExecveMsg": 101,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}
func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}

type Fork struct {
	ParentPid        *int32  `protobuf:"varint,1,req,name=parent_pid" json:"parent_pid,omitempty"`
	ChildPid         *int32  `protobuf:"varint,2,req,name=child_pid" json:"child_pid,omitempty"`
	Name             *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Fork) Reset()         { *m = Fork{} }
func (m *Fork) String() string { return proto.CompactTextString(m) }
func (*Fork) ProtoMessage()    {}

func (m *Fork) GetParentPid() int32 {
	if m != nil && m.ParentPid != nil {
		return *m.ParentPid
	}
	return 0
}

func (m *Fork) GetChildPid() int32 {
	if m != nil && m.ChildPid != nil {
		return *m.ChildPid
	}
	return 0
}

func (m *Fork) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type Execve struct {
	Pid                  *int32   `protobuf:"varint,100,req,name=pid" json:"pid,omitempty"`
	PidParent            *int32   `protobuf:"varint,105,req,name=pid_parent" json:"pid_parent,omitempty"`
	Filename             *string  `protobuf:"bytes,101,req,name=filename" json:"filename,omitempty"`
	Arguments            []string `protobuf:"bytes,102,rep,name=arguments" json:"arguments,omitempty"`
	EnvironmentVariables []string `protobuf:"bytes,103,rep,name=environment_variables" json:"environment_variables,omitempty"`
	Uuid                 *string  `protobuf:"bytes,104,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized     []byte   `json:"-"`
}

func (m *Execve) Reset()         { *m = Execve{} }
func (m *Execve) String() string { return proto.CompactTextString(m) }
func (*Execve) ProtoMessage()    {}

func (m *Execve) GetPid() int32 {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return 0
}

func (m *Execve) GetPidParent() int32 {
	if m != nil && m.PidParent != nil {
		return *m.PidParent
	}
	return 0
}

func (m *Execve) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *Execve) GetArguments() []string {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *Execve) GetEnvironmentVariables() []string {
	if m != nil {
		return m.EnvironmentVariables
	}
	return nil
}

func (m *Execve) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func init() {
	proto.RegisterEnum("OGRT.MessageType", MessageType_name, MessageType_value)
}
